"use strict";(self.webpackChunkproduct=self.webpackChunkproduct||[]).push([[433,4300],{3201:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>d,default:()=>p,frontMatter:()=>c,metadata:()=>s,toc:()=>h});const s=JSON.parse('{"id":"api/overview","title":"API Overview","description":"The  platform provides an easy-to-use and expressive API for interacting with our services. The API uses gRPC for the transport mechanism, but you will mostly interact with it through one of our SDKs, which are designed to guide and support your usage, or Command-Line Interface (CLI).","source":"@site/docs/api/overview.mdx","sourceDirName":"api","slug":"/api/overview","permalink":"/api/overview","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":1,"frontMatter":{"sidebar_position":1},"sidebar":"sidebar","previous":{"title":"Quickstart","permalink":"/quickstart"},"next":{"title":"FIS Authentication","permalink":"/api/fis-auth"}}');var i=n(4848),r=n(8453),o=n(4767),a=n(4753);const c={sidebar_position:1},d="API Overview",l={},h=[{value:"SDKs",id:"sdks",level:3},{value:"Authentication &amp; Authorization",id:"authentication--authorization",level:3},{value:"Observations",id:"observations",level:3},{value:"SDK Setup",id:"sdk-setup",level:2}];function u(e){const t={a:"a",code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",li:"li",ol:"ol",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"api-overview",children:"API Overview"})}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(a.ProductName,{})," platform provides an easy-to-use and expressive API for interacting with our services. The API uses gRPC for the transport mechanism, but you will mostly interact with it through one of our SDKs, which are designed to guide and support your usage, or Command-Line Interface (CLI)."]}),"\n",(0,i.jsxs)(t.p,{children:["While not RESTful, we attempt to follow some of the REST concepts. Our API is oriented around the idea of objects. For instance, ",(0,i.jsx)(t.code,{children:"transfers"})," and ",(0,i.jsx)(t.code,{children:"accounts"})," are two types of objects, and each of those objects has certain operations that take place on them.\nAt its core, the ",(0,i.jsx)(a.ProductName,{})," platform operates on a set of standard protobuf messages. This means that all objects and requests in the system adhere to a standardized format, making it easier for you to work with and understand."]}),"\n",(0,i.jsx)(t.h3,{id:"sdks",children:"SDKs"}),"\n",(0,i.jsxs)(t.p,{children:[(0,i.jsx)(a.ProductName,{})," currently offers three fully-featured SDKs for its API:"]}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"Rust"}),"\n",(0,i.jsx)(t.li,{children:"NodeJS"}),"\n",(0,i.jsx)(t.li,{children:"Dart"}),"\n"]}),"\n",(0,i.jsx)(t.p,{children:"Each is built on the same gRPC API definitions. If your favorite language is not represented, don't despair; you can still use the raw gRPC API. The SDKs provide a thin extension layer over the generated protobuf messages that helps with signing and reduces boilerplate code."}),"\n",(0,i.jsx)(t.h3,{id:"authentication--authorization",children:"Authentication & Authorization"}),"\n",(0,i.jsxs)(t.p,{children:["The ",(0,i.jsx)(a.ProductName,{})," API uses elliptic curve-based signing to authenticate each request. Two typical signature schemes are supported: ED25519 and NIST-P256. Each request is wrapped in a protobuf message type called ",(0,i.jsx)(t.code,{children:"RequestEnvelope"}),", which contains the request itself and its signature. It ensures that secrets (private keys) remain with the user and aren't transported across the internet."]}),"\n",(0,i.jsxs)(t.p,{children:["Each request is authorized using the RBAC (Role-Based Access Control) system. The ",(0,i.jsx)(t.a,{href:"./roles",children:"Roles"})," and ",(0,i.jsx)(t.a,{href:"./role-bindings",children:"Role Bindings"})," pages provide more details about the RBAC system."]}),"\n",(0,i.jsx)(t.h3,{id:"observations",children:"Observations"}),"\n",(0,i.jsxs)(t.p,{children:["One distinctive part of ",(0,i.jsx)(a.ProductName,{}),"'s API is getting an event stream of many objects in the system. For instance, you can observe transfers on specific accounts to get notified of every transfer. Observations use gRPC's stream functionality, which allows for a long-running HTTP/2 connection that delivers periodic messages."]}),"\n",(0,i.jsx)(t.p,{children:"Many of the ledger's most valuable properties come from observations. Observations are essential:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsx)(t.li,{children:"to build an FX service"}),"\n",(0,i.jsx)(t.li,{children:"to run real-time AML checks"}),"\n",(0,i.jsx)(t.li,{children:"to build any other event-sourced application"}),"\n"]}),"\n",(0,i.jsx)(t.h2,{id:"sdk-setup",children:"SDK Setup"}),"\n",(0,i.jsxs)(t.p,{children:["You must first initialize the ",(0,i.jsx)(a.ProductName,{})," SDK, and while this process varies for each language, it always includes two key steps:"]}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsx)(t.li,{children:"Connect to the ledger."}),"\n",(0,i.jsx)(t.li,{children:"Add the signer."}),"\n"]}),"\n",(0,i.jsx)(o.Ay,{code:{cli:"\nexport LEDGER_ADDR='<hostname>'\nexport OPERATOR_KEY_FILE='file_location'\n",ts:'\nimport { M10Client, CryptoSigner } from "m10-sdk";\n\nconst LEDGER_URL = "https://app.m10.net";\nconst operatorClient = new M10Client(LEDGER_URL);\n\n// The code above defines the minimal client, which you can use to query public account details, transactions and documents.\n// Although some of data may have specific permissions. And to get the data, you have to have an account with those permissions.\n// Accounts in M10 ecosystem is an entry from the ledger, bounded with "ED25519" public key.\n// To start querying data with specific permissions or send transactions - you mast define "CryptoSigner", which is the utility helper around "ED25519 and "pkcs8" pem.\n\nconst OPERATOR_KEY = "MFMCAQEwBQYDK2VwBCIEIMA9e6xaIFATarh2S5yVEe7jene/36EOcM+3B/sOH0y/oSMDIQDA9/WOLKaVoXq92lOSjloExzLXCdRz8oW9TweVGAGqZg==";\nconst operatorSigner = await CryptoSigner.fromPkcs8Pem(OPERATOR_KEY);\n\nconst operatorClient = new M10Client(LEDGER_URL, operatorSigner);\n',dart:"\nimport 'package:m10_sdk/m10_sdk.dart';\nimport 'package:m10_sdk/security/local_signing.dart';\nimport 'package:m10_sdk/src/generated/directory/api.pb.dart' as directory;\n\n// Set up signing\nconst testKeyPairPath = './assets/test_user.pkcs8';\nfinal signer = LocalSigning.loadKeyPair(testKeyPairPath);\n\n// Create SDK client\nfinal client = M10Sdk(\n  signer: signer,\n  ledgers: [\n      directory.Ledger(\n          operator: 'fis.m10.net',\n          url: 'https://fis.m10.net/',\n      ),\n  ],\n);\n",rust:'\nuse m10_sdk::{M10Client, Ed25519};\nuse m10_sdk::client::Channel;\n\nlet LEDGER_URL = "...";\nlet operator_channel = Channel::from_static(LEDGER_URL).connect_lazy()?;\nlet operator_signer = Ed25519::load_key_pair("./key_file.pksc8").unwrap();\nlet client = M10Client::new(operator_signer, operator_channel);'}})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}},4753:(e,t,n)=>{n.r(t),n.d(t,{ProductName:()=>d,assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"components/variables","title":"variables","description":"","source":"@site/docs/components/variables.mdx","sourceDirName":"components","slug":"/components/variables","permalink":"/components/variables","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var i=n(4848),r=n(8453);const o={},a=void 0,c={},d=()=>(0,i.jsx)("span",{children:"DRM"}),l=[];function h(e){return(0,i.jsx)(i.Fragment,{})}function u(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(h,{...e})}):h()}},8453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var s=n(6540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);