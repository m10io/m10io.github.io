"use strict";(self.webpackChunkproduct=self.webpackChunkproduct||[]).push([[433,2714],{246:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>a});var i=t(4848),r=t(8453),s=t(4753);const a=[{value:"Key Generation and Storage",id:"key-generation-and-storage",level:3},{value:"Access Controls and Authorization",id:"access-controls-and-authorization",level:3},{value:"Key Rotation and Revocation",id:"key-rotation-and-revocation",level:3},{value:"Monitoring and Auditing",id:"monitoring-and-auditing",level:3},{value:"Additional Considerations",id:"additional-considerations",level:3}];function o(e){const n={h3:"h3",li:"li",p:"p",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["On the ",(0,i.jsx)(s.ProductName,{})," platform, private keys are used to generate digital signatures, which are required to authenticate and authorize transactions on the blockchain."]}),"\n",(0,i.jsx)(n.p,{children:"Each participant has at least one private key."}),"\n",(0,i.jsx)(n.p,{children:"Banks, Payment Service Providers (PSPs) and developers must implement the utmost security measures to protect their private keys, which are critical for maintaining the integrity and confidentiality of their API communications. Here are some best practices:"}),"\n",(0,i.jsx)(n.h3,{id:"key-generation-and-storage",children:"Key Generation and Storage"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Hardware Security Modules (HSMs):"})," The most secure way to generate, store, and use private keys is within specialized hardware devices called HSMs. HSMs are designed to be tamper-resistant and offer robust cryptographic capabilities."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Key Management Systems (KMS):"})," Implement a KMS to manage the lifecycle of the private keys. This includes key generation, storage, rotation, and revocation. The KMS should enforce strict access controls and audit trails."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Secure Enclaves:"})," If HSMs are not feasible, consider using secure enclaves (e.g., Trusted Platform Modules or Intel SGX) within servers to provide an isolated and protected environment for key storage."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"access-controls-and-authorization",children:"Access Controls and Authorization"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Least Privilege:"})," Employ the principle of least privilege, granting only the minimum necessary access to the private keys to authorized personnel and systems.\nRole-Based Access Control (RBAC): Implement RBAC to define and enforce different access levels for various roles involved in key management and API operations."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Strong Authentication:"})," Enforce strong multi-factor authentication (MFA) for any personnel accessing or managing private keys."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"key-rotation-and-revocation",children:"Key Rotation and Revocation"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Regular Rotation:"})," Rotate private keys at regular intervals to minimize the impact of a potential key compromise. Establish a clear key rotation policy and schedule."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Revocation Mechanism:"})," Implement a robust mechanism to revoke compromised or expired private keys immediately."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"monitoring-and-auditing",children:"Monitoring and Auditing"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Logging and Monitoring:"})," Maintain comprehensive logs of all key-related activities, including access attempts, usage, and changes. Continuously monitor these logs for any suspicious activity."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Regular Audits:"})," Conduct regular audits of the key management system and processes to ensure compliance with security policies and identify any potential weaknesses."]}),"\n"]}),"\n",(0,i.jsx)(n.h3,{id:"additional-considerations",children:"Additional Considerations"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Secure Communication:"})," Ensure that all API communication channels are encrypted using strong protocols (e.g., TLS 1.3) to prevent eavesdropping or tampering.\nIncident Response Plan: Develop and regularly test an incident response plan to address any potential security breaches or key compromises promptly."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Compliance:"})," Adhere to relevant industry standards and regulations (e.g., PCI DSS, PSD2) for private key management and API security."]}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},788:(e,n,t)=>{t.d(n,{A:()=>c});t(6540);var i=t(8186),r=t(7430),s=t(4612),a=t(4767),o=t(4848);function c(e){let n=e.code.trim();return(0,o.jsx)("div",{className:"code",children:(0,o.jsxs)("div",{className:"code-inner",children:[(0,o.jsx)(i.Ay,{value:n,height:e.height||"auto",theme:r.IR,extensions:[a.gq[e.lang]],readOnly:"true"}),(0,o.jsx)(s.A,{code:n,className:"buttonGroup"})]})})}},2511:(e,n,t)=>{t.d(n,{Ay:()=>o,RM:()=>s});var i=t(4848),r=t(8453);t(4753);const s=[];function a(e){const n={code:"code",p:"p",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.p,{children:"This is text for account recovery"}),"\n",(0,i.jsxs)(n.p,{children:["(Imported from ",(0,i.jsx)(n.code,{children:"../partials/_account-recovery-request.mdx"}),". REMOVE WHEN COMPLETED)"]})]})}function o(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(a,{...e})}):a(e)}},2679:(e,n,t)=>{t.d(n,{Ay:()=>l,RM:()=>o});var i=t(4848),r=t(8453),s=t(4767),a=(t(788),t(4753));const o=[{value:"How to Generate Keys",id:"how-to-generate-keys",level:4},{value:"Output",id:"output",level:4},{value:"Create ledger account",id:"create-ledger-account",level:4},{value:"Create AccountSet",id:"create-accountset",level:4},{value:"Create role binding",id:"create-role-binding",level:4},{value:"Create alias",id:"create-alias",level:4}];function c(e){const n={a:"a",admonition:"admonition",code:"code",h1:"h1",h4:"h4",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Onboarding a customer to the ",(0,i.jsx)(a.ProductName,{})," Platform means creating an account for the customer on the ledger and assign the apropriate permissions (which may be changed later). Optionally, a directory alias can be added to make it easier to address the user when transfering digital money. The party onboarding the user (e.g. PSP) is responsible for complying with local KYC/KYB regulations."]}),"\n",(0,i.jsx)(n.p,{children:"The steps to onboard a user include:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Have the user generate a cryptographic key pair"}),"\n",(0,i.jsx)(n.li,{children:"Create a ledger account"}),"\n",(0,i.jsx)(n.li,{children:"Create a role binding (optional)"}),"\n",(0,i.jsxs)(n.li,{children:["Create alias (optional) (see section ",(0,i.jsx)(n.a,{href:"#managing-user-aliases",children:"Managing user aliases"}),")."]}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Each user with their own ledger account, should have a cryptographic key pair that is generated by the account holder. The resulting private key must be stored securely with the account holder and the public key is used during the account creation process."}),"\n",(0,i.jsxs)(n.admonition,{type:"warning",children:[(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why Users Should Generate Their Own Cryptographic Keys"})}),(0,i.jsx)(n.p,{children:"To ensure the highest level of security and control over API interactions, it is strongly recommend that users generate their own cryptographic key pairs. This key pair consists of a public key and a private key."}),(0,i.jsx)(n.p,{children:(0,i.jsx)(n.strong,{children:"Why Self-Generated Keys Matter:"})}),(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Reduced Risk of Compromise:"})," By generating their own keys, users minimize the risk of the keys falling into the wrong hands."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Stronger Authentication:"})," Using a self-generated private key for digital signatures strengthens the authentication process."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Full Ownership:"})," Complete ownership and control over keys, ensuring data remains secure."]}),"\n",(0,i.jsxs)(n.li,{children:[(0,i.jsx)(n.strong,{children:"Flexibility:"})," Manage and rotate keys as needed, adapting to evolving security best practices."]}),"\n"]})]}),"\n",(0,i.jsx)(n.h4,{id:"how-to-generate-keys",children:"How to Generate Keys"}),"\n",(0,i.jsxs)(n.p,{children:["The ",(0,i.jsx)(a.ProductName,{})," SDKs and CLI provide functions for key generation. The ",(0,i.jsx)(a.ProductName,{})," mobile SDK stores the private key in the mobile device's secure element, or trusted execution environment (TEE)."]}),"\n",(0,i.jsx)(n.p,{children:"The key pair should be in the PKCS8 format. If Alice were to generate a key pair, she would enter the following command:"}),"\n",(0,i.jsx)(s.Ay,{code:{cli:'\nexport ALICE_KEY_FILE="alice.pkcs8"\nexport ALICE_PUBLIC_KEY=$(m10 create key-pair -a ed25519 --path $CB_KEY_FILE)\nm10 get public-key -k $ALICE_KEY_FILE\n',ts:'\nconst aliceSigner = sdk.signer.CryptoSigner.generateKeyPair();\nconsole.log("public key is: ", aliceSigner.getPublicKey().toString());\n',rust:'\nuse m10_sdk::Signer;\nuse base64::engine::Engine;\nuse base64::engine::general_purpose::STANDARD as BASE64;\n\nlet (alice_kp, alice_signer) = Ed25519::new_key_pair_exportable().unwrap();\nprintln!("public key is: {}", BASE64.encode(alice_signer.public_key()));\nprintln!("key pair is: {}", BASE64.encode(alice_kp));\n'}}),"\n",(0,i.jsx)(n.h4,{id:"output",children:"Output"}),"\n",(0,i.jsx)(n.p,{children:"The output would be something like:"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{className:"language-bash",children:'created key pair file: "alice.pkcs8"\npublic key is:\n"hOJIkyqJ7/dUStWzcgj+afT1dBvJKczPvl5q70MpMaY="\n'})}),"\n",(0,i.jsx)(n.h4,{id:"create-ledger-account",children:"Create ledger account"}),"\n",(0,i.jsx)(n.p,{children:"Now that the user who should get a ledger account has a key pair, the bank can create the account."}),"\n",(0,i.jsx)(n.p,{children:"To create an account on the ledger:"}),"\n",(0,i.jsx)(s.Ay,{code:{rust:'\nuse m10_sdk::{AccountBuilder, sdk, account_id, DocumentBuilder, Signer};\n\nlet (_, account_id) = client.create_account(\nAccountBuilder::parent(account_id![0]?)\n\t.issuance(true)\n\t.frozen(false)\n\t.balance_limit(1_000_000)).await?;\nclient.documents(\nDocumentBuilder::default()\n.insert(sdk::AccountMetadata {\n  id: account_id.to_vec(),\n  owner: client.signer().public_key().to_vec(),\n  profile_image_url: "https://upload.wikimedia.org/wikipedia/commons/8/8b/Alice_Liddell.jpg".to_string(),\n  name: "Alice Lidell".to_string(),\n  public_name: "Alice Lidell".to_string()})).await?;',ts:'\nconst [_txId, accountId] = await ledgerClient.createAccount(\nnew sdk.AccountBuilder(new sdk.AccountId("0d800000000000000000000000000002"))\n  .issuance(false)\n  .frozen(false)\n);\nawait ledgerClient.documents(\nnew sdk.DocumentBuilder().insert(sdk.collections.Collection.AccountMetadata, new m10.sdk.model.AccountMetadata({\n  id: accountId.toUint8Array(),\n  name: "Alice Lidell",\n  publicName: "Alice Lidell",\n  owner: operatorSigner.getPublicKey().toUint8Array()\n}))\n);\n',dart:'\nclient.createAccount(\n parentId: "0d800000000000000000000000000002",\n operator: "m10.usd",\n name: "Alice Lidell",\n publicName: "Alice Lidell",\n owner: "hOJIkyqJ7/dUStWzcgj+afT1dBvJKczPvl5q70MpMaY=",\n profileImageUrl: "https://upload.wikimedia.org/wikipedia/commons/8/8b/Alice_Liddell.jpg",\n)\n',cli:"m10 create account \\\n--owner hOJIkyqJ7/dUStWzcgj+afT1dBvJKczPvl5q70MpMaY= \\ # key created in the previous step\n--parent-account 0d800000000000000000000000000002 \\ # the bank's issuance account\n--name 'Alice Lidell' \\\n--profile-image-url 'https://upload.wikimedia.org/wikipedia/commons/8/8b/Alice_Liddell.jpg' \\\n--public-name 'Alice Lidell' # name used in the directory"}}),"\n",(0,i.jsx)(n.h4,{id:"create-accountset",children:"Create AccountSet"}),"\n",(0,i.jsx)(n.p,{children:"Optionally..."}),"\n",(0,i.jsx)(n.p,{children:'"[insert code sample]"'}),"\n",(0,i.jsx)(n.h4,{id:"create-role-binding",children:"Create role binding"}),"\n",(0,i.jsxs)(n.p,{children:["We will assume that the issuer already has created a role for its customers called ",(0,i.jsx)(n.code,{children:"customer-role"}),". This role gives associated subjects permissions to their accounts. In this case, the permissions of the customer-role is ",(0,i.jsx)(n.code,{children:"READ"}),", ",(0,i.jsx)(n.code,{children:"TRANSACT"}),", and ",(0,i.jsx)(n.code,{children:"UPDATE"}),". See the documentation about ",(0,i.jsx)(n.a,{href:"../api/roles",children:"Roles"})," for more information."]}),"\n",(0,i.jsxs)(n.p,{children:["To bind the role ",(0,i.jsx)(n.code,{children:"customer-role"})," to Alice, we perform the following command:"]}),"\n",(0,i.jsx)(s.Ay,{code:{rust:'\nclient.documents(\n  DocumentBuilder::default().insert(sdk::RoleBinding {\n    id: uuid::Uuid::new_v4().as_bytes().to_vec().into(),\n    name: "customer-role-binding".to_string(),\n    role: uuid::Uuid::parse_str("72b79b75-5736-412d-a391-e7a190a36b15")?\n      .as_bytes()\n      .to_vec()\n      .into(), // The id of an already created role\n    subjects: vec![],\n    expressions: vec![sdk::Expression {\n        collection: "banks".to_string(),\n        expression: "document.owner == public_key".to_string() // make a role-binding that applies to owners of banks\n    }],\n    owner: client.signer().public_key().to_vec().into(),\n    is_universal: false\n  })\n).await?;\n',ts:" \nconst roleId = new sdk.DocumentId('role')\nconst roleBindingId = new sdk.DocumentId('role-binding')\nconst txId = await ledgerClient.documents(\n  new sdk.DocumentBuilder()\n      // Create a new role\n      .insert(\n          collections.Collection.Role, \n          new m10.sdk.Role({\n              id: roleId.toUint8Array(),\n              name: 'my role name',\n              owner: ledgerClient.getSigner().getPublicKey().toUint8Array()\n          })\n      )\n      // Create a role-binding for the role\n      .insert(\n          collections.Collection.RoleBinding,\n          new m10.sdk.RoleBinding({\n              id: roleBindingId.toUint8Array(),\n              name: 'my role binding name',\n              role: roleId.toUint8Array(),\n              subjects: [\n                  new sdk.PublicKey('hOJIkyqJ7/dUStWzcgj+afT1dBvJKczPvl5q70MpMaY=').toUint8Array()\n              ],\n          }),\n      ),\n)\nconsole.log(`Created role-binding ${roleBindingId} in transaction ${txId}`)\n",dart:'\nclient.createRoleBinding(\n name: "customer-role-binding",\n role: "72b79b75-5736-412d-a391-e7a190a36b15",\n subjects: ["hOJIkyqJ7/dUStWzcgj+afT1dBvJKczPvl5q70MpMaY="]\n operator: \'fis.m10.net\',\n)\n',cli:'m10 create role-binding \\\n  --name "customer-role-binding" \\ # The name of the binding\n  --role "72b79b75-5736-412d-a391-e7a190a36b15" \\ # The ID (uuid) of the role\n  --owner "wPf1jiymlaF6vdpTko5aBMcy1wnUc/KFvU8HlRgBqmY=" \\ # The bank\'s public key\n  --subject "hOJIkyqJ7/dUStWzcgj+afT1dBvJKczPvl5q70MpMaY=" # Alice\'s public key\n'}}),"\n",(0,i.jsx)(n.h1,{id:""}),"\n",(0,i.jsx)(n.h4,{id:"create-alias",children:"Create alias"}),"\n",(0,i.jsxs)(n.p,{children:["Now that we've created the user Alice with an account and permissions to access her account, we can create an alias, so she's easier to find the ",(0,i.jsx)(a.ProductName,{})," Directory. We will use Alice's phone number, ",(0,i.jsx)(n.code,{children:"+1 555-555-5555"}),"."]}),"\n",(0,i.jsx)(n.p,{children:'"[insert code sample]"'})]})}function l(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},3773:(e,n,t)=>{t.d(n,{Ay:()=>c,RM:()=>a});var i=t(4848),r=t(8453),s=t(4753);const a=[];function o(e){const n={li:"li",p:"p",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.p,{children:["Offboarding a customer means disabling the ",(0,i.jsx)(s.ProductName,{})," account from receiving, or sending funds transfer, or perform any action on the account and deactivate the alias entry. For compliance reasons, an account isn't deleted, but rather made unavailable. Before disabling an account, the balance must be zero."]}),"\n",(0,i.jsx)(n.p,{children:"Steps to offboard a user:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"Disable user's ledger account"}),"\n",(0,i.jsx)(n.li,{children:"Deactivate alias registry"}),"\n"]})]})}function c(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(o,{...e})}):o(e)}},4753:(e,n,t)=>{t.r(n),t.d(n,{ProductName:()=>l,assets:()=>c,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"components/variables","title":"variables","description":"","source":"@site/docs/components/variables.mdx","sourceDirName":"components","slug":"/components/variables","permalink":"/components/variables","draft":false,"unlisted":false,"tags":[],"version":"current","frontMatter":{}}');var r=t(4848),s=t(8453);const a={},o=void 0,c={},l=()=>(0,r.jsx)("span",{children:"DRM"}),d=[];function u(e){return(0,r.jsx)(r.Fragment,{})}function h(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(u,{...e})}):u()}},7546:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>p,contentTitle:()=>h,default:()=>y,frontMatter:()=>u,metadata:()=>i,toc:()=>m});const i=JSON.parse('{"id":"playbooks/psp","title":"Payment Service Provider","description":"Learn the tasks of a PSP.","source":"@site/docs/playbooks/psp.mdx","sourceDirName":"playbooks","slug":"/playbooks/psp","permalink":"/playbooks/psp","draft":false,"unlisted":false,"tags":[],"version":"current","sidebarPosition":2,"frontMatter":{"sidebar_position":2}}');var r=t(4848),s=t(8453),a=(t(788),t(4767),t(4753)),o=t(2679),c=t(3773),l=t(246),d=t(2511);const u={sidebar_position:2},h="Payment Service Provider",p={},m=[{value:"Onboard customers",id:"onboard-customers",level:2},...o.RM,{value:"Offboard customers",id:"offboard-customers",level:2},...c.RM,{value:"Integrate <ProductName></ProductName> capabilities with my web app",id:"integrate--capabilities-with-my-web-app",level:2},{value:"Integrate <ProductName></ProductName> capabilities with my mobile app",id:"integrate--capabilities-with-my-mobile-app",level:2},{value:"Manage private keys",id:"manage-private-keys",level:2},...l.RM,{value:"Facilitate funds transfer requests by my customers",id:"facilitate-funds-transfer-requests-by-my-customers",level:2},{value:"Check the status of a payment request",id:"check-the-status-of-a-payment-request",level:2},{value:"Perform sanctions screening on customer requests",id:"perform-sanctions-screening-on-customer-requests",level:2},{value:"Perform AML screening on customer requests",id:"perform-aml-screening-on-customer-requests",level:2},{value:"Check for risk and fraud on customer requests",id:"check-for-risk-and-fraud-on-customer-requests",level:2},{value:"Facilitate account recovery requests by my customers",id:"facilitate-account-recovery-requests-by-my-customers",level:2},...d.RM];function g(e){const n={h1:"h1",h2:"h2",header:"header",p:"p",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"payment-service-provider",children:"Payment Service Provider"})}),"\n",(0,r.jsx)(n.p,{children:"Learn the tasks of a PSP."}),"\n",(0,r.jsx)(n.h2,{id:"onboard-customers",children:"Onboard customers"}),"\n","\n",(0,r.jsx)(o.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"offboard-customers",children:"Offboard customers"}),"\n","\n",(0,r.jsx)(c.Ay,{}),"\n",(0,r.jsxs)(n.h2,{id:"integrate--capabilities-with-my-web-app",children:["Integrate ",(0,r.jsx)(a.ProductName,{})," capabilities with my web app"]}),"\n",(0,r.jsxs)(n.h2,{id:"integrate--capabilities-with-my-mobile-app",children:["Integrate ",(0,r.jsx)(a.ProductName,{})," capabilities with my mobile app"]}),"\n",(0,r.jsx)(n.h2,{id:"manage-private-keys",children:"Manage private keys"}),"\n","\n",(0,r.jsx)(l.Ay,{}),"\n",(0,r.jsx)(n.h2,{id:"facilitate-funds-transfer-requests-by-my-customers",children:"Facilitate funds transfer requests by my customers"}),"\n",(0,r.jsx)(n.h2,{id:"check-the-status-of-a-payment-request",children:"Check the status of a payment request"}),"\n",(0,r.jsx)(n.h2,{id:"perform-sanctions-screening-on-customer-requests",children:"Perform sanctions screening on customer requests"}),"\n",(0,r.jsx)(n.h2,{id:"perform-aml-screening-on-customer-requests",children:"Perform AML screening on customer requests"}),"\n",(0,r.jsx)(n.h2,{id:"check-for-risk-and-fraud-on-customer-requests",children:"Check for risk and fraud on customer requests"}),"\n",(0,r.jsx)(n.h2,{id:"facilitate-account-recovery-requests-by-my-customers",children:"Facilitate account recovery requests by my customers"}),"\n","\n",(0,r.jsx)(d.Ay,{})]})}function y(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(g,{...e})}):g(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>o});var i=t(6540);const r={},s=i.createContext(r);function a(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:a(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);