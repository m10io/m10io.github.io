"use strict";(self.webpackChunkproduct=self.webpackChunkproduct||[]).push([[372],{3905:(e,t,a)=>{a.d(t,{Zo:()=>u,kt:()=>p});var r=a(7294);function n(e,t,a){return t in e?Object.defineProperty(e,t,{value:a,enumerable:!0,configurable:!0,writable:!0}):e[t]=a,e}function o(e,t){var a=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),a.push.apply(a,r)}return a}function i(e){for(var t=1;t<arguments.length;t++){var a=null!=arguments[t]?arguments[t]:{};t%2?o(Object(a),!0).forEach((function(t){n(e,t,a[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(a)):o(Object(a)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(a,t))}))}return e}function s(e,t){if(null==e)return{};var a,r,n=function(e,t){if(null==e)return{};var a,r,n={},o=Object.keys(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||(n[a]=e[a]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)a=o[r],t.indexOf(a)>=0||Object.prototype.propertyIsEnumerable.call(e,a)&&(n[a]=e[a])}return n}var l=r.createContext({}),c=function(e){var t=r.useContext(l),a=t;return e&&(a="function"==typeof e?e(t):i(i({},t),e)),a},u=function(e){var t=c(e.components);return r.createElement(l.Provider,{value:t},e.children)},d="mdxType",h={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var a=e.components,n=e.mdxType,o=e.originalType,l=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=c(a),m=n,p=d["".concat(l,".").concat(m)]||d[m]||h[m]||o;return a?r.createElement(p,i(i({ref:t},u),{},{components:a})):r.createElement(p,i({ref:t},u))}));function p(e,t){var a=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=a.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[d]="string"==typeof e?e:n,i[1]=s;for(var c=2;c<o;c++)i[c]=a[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,a)}m.displayName="MDXCreateElement"},6777:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>c});var r=a(7462),n=(a(7294),a(3905));const o={sidebar_position:2},i="Overview",s={unversionedId:"overview",id:"overview",title:"Overview",description:"M10's ledger is a distributed database for storing financial transactions. In many ways, it is similar to traditional databases you might be familiar with such as PostgresSQL or MongoDB, but there are some key distinctions. For one the ledger is specialized in storing financial data, and small amounts of metadata. The ledger is also permissioned; every operation needs to be signed by a key. Keys are granted access through our RBAC (role-based-access control) system. The ledger is also very high-performance achieving 1M TPS in certain configurations.",source:"@site/docs/overview.md",sourceDirName:".",slug:"/overview",permalink:"/overview",draft:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2},sidebar:"sidebar",previous:{title:"Home",permalink:"/"},next:{title:"Quickstart",permalink:"/quickstart"}},l={},c=[{value:"BFT",id:"bft",level:2}],u={toc:c};function d(e){let{components:t,...a}=e;return(0,n.kt)("wrapper",(0,r.Z)({},u,a,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"overview"},"Overview"),(0,n.kt)("p",null,"M10's ledger is a distributed database for storing financial transactions. In many ways, it is similar to traditional databases you might be familiar with such as PostgresSQL or MongoDB, but there are some key distinctions. For one the ledger is specialized in storing financial data, and small amounts of metadata. The ledger is also permissioned; every operation needs to be signed by a key. Keys are granted access through our RBAC (role-based-access control) system. The ledger is also very high-performance achieving 1M TPS in certain configurations. "),(0,n.kt)("h2",{id:"bft"},"BFT"),(0,n.kt)("p",null,"Unlike many traditional distributed databases, the ledger is byzantine fault tolerant (BFT). If you have heard of BFT, it is likely in the context of a blockchain such as Bitcoin. If you haven't heard of BFT, the TLDR is that ledger can withstand failure or malicious intrusion of half of its nodes before going down. M10's ledger is based on our proprietary blockchain technology, but with different trade-offs to popular crypto-currencies. For one, the M10 ledger is private, which means that a single entity \u2014 or small group of trusted entities \u2014 runs the ledger. This allows us to achieve higher performance and much lower computational and environmental costs than other blockchain-based systems."),(0,n.kt)("h1",{id:"hierachical-ledger"},"Hierachical Ledger"),(0,n.kt)("img",{src:"./img/account-hierarchy.svg",style:{display:"block",margin:"auto",width:"90%"}}),(0,n.kt)("br",null),(0,n.kt)("p",null,'One of the buzzwords we use to describe the ledger is "hierarchical". All that means is accounts form a tree as shown above. An account is similar to an account you might have at a bank. It has a balance, a name, and in our system a parent account. This gives the ledger the ability to easily model fractional reserve banking and provides a clean permissions model. When a transfer takes place between two accounts, it "walks" the tree. You can head to the accounts and transfers docs for more info on this concept.'),(0,n.kt)("h1",{id:"rbac"},"RBAC"),(0,n.kt)("p",null,'RBAC or role-based access control is a common model for permissions in enterprise software. The idea is that there are "roles" that contain a list of permissions for a particular resource. Each of those roles is "bound" to a user with a role-binding. M10 uses our RBAC system for all permissions in the ledger. More info on the particulars can be found in the role and role-binding docs.'),(0,n.kt)("h1",{id:"documents"},"Documents"),(0,n.kt)("p",null,'The ledger also provides the ability to store documents as well as financial transactions. Documents are stored in "collections", which are a group of documents with the same protobuf type. Documents are typically used to store metadata about the ledger, such as ',(0,n.kt)("inlineCode",{parentName:"p"},"Bank"),". ",(0,n.kt)("inlineCode",{parentName:"p"},"Bank")," is a list of metadata about a bank that exists in the ledger. Documents, like almost everything in the M10 system, are protobufs. They are querably using a number of API calls, usually called something like ",(0,n.kt)("inlineCode",{parentName:"p"},"listBanks"),". "),(0,n.kt)("h1",{id:"actions"},"Actions"),(0,n.kt)("p",null,"What if you want to send more than just money to an account? For instance what if you wanted to get a quote for an FX swap from a market maker? The ledger provides a clean interface for solving these, actions. An action is a message sent from one account to another. M10's ledger allows you to subscribe to a stream of actions taking place on your account. If you are familiar with a message queue system like Kafka, this might seem familiar."))}d.isMDXComponent=!0}}]);